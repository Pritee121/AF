"""
Django settings for AF project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ls+syqb$nqy!_%xlystlo_oy(*&lg!8x=5q!ci$e6wy5^g*0z#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "daphne",  # ✅ Add Daphne first
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    'channels',
    'chat',
    
]


ASGI_APPLICATION = "AF.asgi.application"

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer",  # Use Redis for production
    },
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'AF.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'], 
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'AF.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'Af@#.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'priteebhattarai03@gmail.com'
EMAIL_HOST_PASSWORD = 'dyav dnfu loje mqyu'

LOGIN_URL = '/login/'  # Redirects to the correct login page

import os

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# # Session settings
# SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Store session in the database
# SESSION_COOKIE_AGE = 86400  # 1 day (24 hours)
# SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # Session remains even after closing browser
# SESSION_SAVE_EVERY_REQUEST = True  # Update session expiration with every request
# SESSION_COOKIE_NAME = 'sessionid'


SESSION_ENGINE = "django.contrib.sessions.backends.db"  # Default Django session engine
SESSION_COOKIE_NAME = "sessionid"  # Ensure different users don’t share session data
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # Prevent session conflicts
SESSION_SAVE_EVERY_REQUEST = True  # Save session on every request



AUTH_USER_MODEL = 'accounts.User'  # ✅ Replace default user model



import os

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]  # ✅ Ensure this exists

# Media files (Uploaded Images)
MEDIA_URL = '/media/'  # ✅ URL to access media files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # ✅ Path to store uploaded files



# AUTHENTICATION_BACKENDS = [
#     'accounts.auth_backend.EmailAuthBackend',  # ✅ Use custom backend
#     'django.contrib.auth.backends.ModelBackend',  # Default Django backend
# ]


# JAZZMIN_SETTINGS = {
#     "site_title": "Artist Finder Admin",
#     "site_header": "Artist Finder Dashboard",
#     "welcome_sign": "Welcome to Artist Finder Admin Panel",
#     "copyright": "Artist Finder © 2025",
    
#     # ✅ Change the default theme
#     "theme": "darkly",  # Options: cerulean, darkly, flatly, lumen, etc.
    
#     # ✅ Customize the navigation menu
#     "topmenu_links": [
#         {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
#         {"name": "User Profiles", "url": "admin:accounts_user_changelist"},
#         {"name": "Bookings", "url": "admin:accounts_booking_changelist"},
#     ],

#     # ✅ Customize sidebar menu
#     "order_with_respect_to": ["accounts.User", "accounts.Booking"],

#     # ✅ Customize user display
#     "custom_js": None,  # Add custom JavaScript (Optional)
#     "custom_css": None,  # Add custom CSS (Optional)
# }

JAZZMIN_SETTINGS = {
    "site_title": "Artist Finder Admin",
    "site_header": "Artist Finder Dashboard",
    "site_brand": "Artist Finder",
    "welcome_sign": "Welcome to the Artist Finder Admin Panel",
    "copyright": "© 2025 Artist Finder, All Rights Reserved",
    
    # ✅ THEME SETTINGS (Choose the best professional one)
    "theme": "superhero",  # Options: cerulean, darkly, flatly, lumen, superhero

    # ✅ NAVBAR & TOP MENU SETTINGS
    "topmenu_links": [
        {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"name": "View Site", "url": "/", "new_window": True},
        {"name": "Users", "url": "admin:accounts_user_changelist"},
        {"name": "Bookings", "url": "admin:accounts_booking_changelist"}, 
    ],

    # ✅ SIDEBAR MENU SETTINGS
    "order_with_respect_to": ["accounts.User", "bookings.Booking"],

    # ✅ ICONS FOR MODELS
    "icons": {
        "auth.User": "fas fa-user",
        "accounts.User": "fas fa-users",
        "bookings.Booking": "fas fa-calendar-check",
    },

    # ✅ Customize User Display
    "user_avatar": "profile_image",  # Show user profile pictures in admin
}


TIME_ZONE = 'Asia/Kathmandu'
USE_TZ = True  # Enable timezone support






import logging

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "file": {
            "level": "DEBUG",
            "class": "logging.FileHandler",
            "filename": "django_email.log",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["file"],
            "level": "DEBUG",
            "propagate": True,
        },
    },
}
